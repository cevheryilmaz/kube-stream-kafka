# # .github/workflows/ci-cd.yml
# name: CI/CD

# on:
#   push:
#     branches: [ main ]

# permissions:
#   contents: read
#   packages: write
#   id-token: write

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     env:
#       REGISTRY: ghcr.io
#       OWNER: ${{ github.actor }}
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up QEMU (for cross-platform, optional)
#         uses: docker/setup-qemu-action@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Login to GHCR
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Build and push producer image
#         run: |
#           docker build -t ${REGISTRY}/${{ github.actor }}/producer:latest ./producer
#           docker push ${REGISTRY}/${{ github.actor }}/producer:latest

#       - name: Build and push consumer image
#         run: |
#           docker build -t ${REGISTRY}/${{ github.actor }}/consumer:latest ./consumer
#           docker push ${REGISTRY}/${{ github.actor }}/consumer:latest

#   deploy:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout manifests
#         uses: actions/checkout@v4

#       - name: Setup kubectl
#         uses: azure/setup-kubectl@v3
#         with:
#           version: 'latest'

#       - name: Decode kubeconfig
#         env:
#           KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}
#         run: |
#           echo "$KUBECONFIG_B64" | base64 --decode > kubeconfig
#           export KUBECONFIG=$(pwd)/kubeconfig
#           kubectl version --client
#           kubectl apply -f k8s/producer
#           kubectl apply -f k8s/consumer

#       - name: Rollout status
#         env:
#           KUBECONFIG: ${{ env.KUBECONFIG }}
#         run: |
#           export KUBECONFIG=$(pwd)/kubeconfig
#           kubectl rollout status deployment/producer --namespace default --timeout=120s || true
#           kubectl rollout status deployment/consumer --namespace default --timeout=120s || true
